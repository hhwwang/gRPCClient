// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/ShoppingCart.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class ShoppingCart
{
  static readonly string __ServiceName = "ShoppingCart";

  static readonly grpc::Marshaller<global::InsuranceTrialLinkGetRequest> __Marshaller_InsuranceTrialLinkGetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::InsuranceTrialLinkGetRequest.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::InsuranceTrialLinkGetResponse> __Marshaller_InsuranceTrialLinkGetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::InsuranceTrialLinkGetResponse.Parser.ParseFrom);

  static readonly grpc::Method<global::InsuranceTrialLinkGetRequest, global::InsuranceTrialLinkGetResponse> __Method_InsuranceTrialLinkGet = new grpc::Method<global::InsuranceTrialLinkGetRequest, global::InsuranceTrialLinkGetResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "InsuranceTrialLinkGet",
      __Marshaller_InsuranceTrialLinkGetRequest,
      __Marshaller_InsuranceTrialLinkGetResponse);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::ShoppingCartReflection.Descriptor.Services[0]; }
  }

  /// <summary>Client for ShoppingCart</summary>
  public partial class ShoppingCartClient : grpc::ClientBase<ShoppingCartClient>
  {
    /// <summary>Creates a new client for ShoppingCart</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    public ShoppingCartClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for ShoppingCart that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    public ShoppingCartClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    protected ShoppingCartClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    protected ShoppingCartClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    /// <summary>
    /// api to generate trial link for 24PW
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::InsuranceTrialLinkGetResponse InsuranceTrialLinkGet(global::InsuranceTrialLinkGetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return InsuranceTrialLinkGet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// api to generate trial link for 24PW
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    public virtual global::InsuranceTrialLinkGetResponse InsuranceTrialLinkGet(global::InsuranceTrialLinkGetRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_InsuranceTrialLinkGet, null, options, request);
    }
    /// <summary>
    /// api to generate trial link for 24PW
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::InsuranceTrialLinkGetResponse> InsuranceTrialLinkGetAsync(global::InsuranceTrialLinkGetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return InsuranceTrialLinkGetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    /// api to generate trial link for 24PW
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    public virtual grpc::AsyncUnaryCall<global::InsuranceTrialLinkGetResponse> InsuranceTrialLinkGetAsync(global::InsuranceTrialLinkGetRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_InsuranceTrialLinkGet, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    protected override ShoppingCartClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new ShoppingCartClient(configuration);
    }
  }

}
#endregion
