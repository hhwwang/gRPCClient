// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/ShoppingCart.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Protos/ShoppingCart.proto</summary>
public static partial class ShoppingCartReflection {

  #region Descriptor
  /// <summary>File descriptor for Protos/ShoppingCart.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ShoppingCartReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChlQcm90b3MvU2hvcHBpbmdDYXJ0LnByb3RvGh5nb29nbGUvcHJvdG9idWYv",
          "d3JhcHBlcnMucHJvdG8iPQocSW5zdXJhbmNlVHJpYWxMaW5rR2V0UmVxdWVz",
          "dBINCgVzdGF0ZRgBIAEoCRIOCgZzZXJ2ZXIYAiABKAUimQEKHUluc3VyYW5j",
          "ZVRyaWFsTGlua0dldFJlc3BvbnNlEisKB2lzVmFsaWQYASABKAsyGi5nb29n",
          "bGUucHJvdG9idWYuQm9vbFZhbHVlEhMKC2NvdW50cnlDb2RlGAIgASgJEg4K",
          "BnVzZXJpZBgDIAEoCRIQCgh0cmlhbFVSTBgEIAEoCRIUCgxlcnJvck1lc3Nh",
          "Z2UYBSABKAkyZgoMU2hvcHBpbmdDYXJ0ElYKFUluc3VyYW5jZVRyaWFsTGlu",
          "a0dldBIdLkluc3VyYW5jZVRyaWFsTGlua0dldFJlcXVlc3QaHi5JbnN1cmFu",
          "Y2VUcmlhbExpbmtHZXRSZXNwb25zZWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::InsuranceTrialLinkGetRequest), global::InsuranceTrialLinkGetRequest.Parser, new[]{ "State", "Server" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InsuranceTrialLinkGetResponse), global::InsuranceTrialLinkGetResponse.Parser, new[]{ "IsValid", "CountryCode", "Userid", "TrialURL", "ErrorMessage" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class InsuranceTrialLinkGetRequest : pb::IMessage<InsuranceTrialLinkGetRequest> {
  private static readonly pb::MessageParser<InsuranceTrialLinkGetRequest> _parser = new pb::MessageParser<InsuranceTrialLinkGetRequest>(() => new InsuranceTrialLinkGetRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InsuranceTrialLinkGetRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ShoppingCartReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InsuranceTrialLinkGetRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InsuranceTrialLinkGetRequest(InsuranceTrialLinkGetRequest other) : this() {
    state_ = other.state_;
    server_ = other.server_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InsuranceTrialLinkGetRequest Clone() {
    return new InsuranceTrialLinkGetRequest(this);
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 1;
  private string state_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string State {
    get { return state_; }
    set {
      state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "server" field.</summary>
  public const int ServerFieldNumber = 2;
  private int server_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Server {
    get { return server_; }
    set {
      server_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InsuranceTrialLinkGetRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InsuranceTrialLinkGetRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (State != other.State) return false;
    if (Server != other.Server) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (State.Length != 0) hash ^= State.GetHashCode();
    if (Server != 0) hash ^= Server.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (State.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(State);
    }
    if (Server != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Server);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (State.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
    }
    if (Server != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Server);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InsuranceTrialLinkGetRequest other) {
    if (other == null) {
      return;
    }
    if (other.State.Length != 0) {
      State = other.State;
    }
    if (other.Server != 0) {
      Server = other.Server;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          State = input.ReadString();
          break;
        }
        case 16: {
          Server = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class InsuranceTrialLinkGetResponse : pb::IMessage<InsuranceTrialLinkGetResponse> {
  private static readonly pb::MessageParser<InsuranceTrialLinkGetResponse> _parser = new pb::MessageParser<InsuranceTrialLinkGetResponse>(() => new InsuranceTrialLinkGetResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InsuranceTrialLinkGetResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ShoppingCartReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InsuranceTrialLinkGetResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InsuranceTrialLinkGetResponse(InsuranceTrialLinkGetResponse other) : this() {
    IsValid = other.IsValid;
    countryCode_ = other.countryCode_;
    userid_ = other.userid_;
    trialURL_ = other.trialURL_;
    errorMessage_ = other.errorMessage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InsuranceTrialLinkGetResponse Clone() {
    return new InsuranceTrialLinkGetResponse(this);
  }

  /// <summary>Field number for the "isValid" field.</summary>
  public const int IsValidFieldNumber = 1;
  private static readonly pb::FieldCodec<bool?> _single_isValid_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
  private bool? isValid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool? IsValid {
    get { return isValid_; }
    set {
      isValid_ = value;
    }
  }


  /// <summary>Field number for the "countryCode" field.</summary>
  public const int CountryCodeFieldNumber = 2;
  private string countryCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CountryCode {
    get { return countryCode_; }
    set {
      countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "userid" field.</summary>
  public const int UseridFieldNumber = 3;
  private string userid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Userid {
    get { return userid_; }
    set {
      userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "trialURL" field.</summary>
  public const int TrialURLFieldNumber = 4;
  private string trialURL_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TrialURL {
    get { return trialURL_; }
    set {
      trialURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "errorMessage" field.</summary>
  public const int ErrorMessageFieldNumber = 5;
  private string errorMessage_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ErrorMessage {
    get { return errorMessage_; }
    set {
      errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InsuranceTrialLinkGetResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InsuranceTrialLinkGetResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsValid != other.IsValid) return false;
    if (CountryCode != other.CountryCode) return false;
    if (Userid != other.Userid) return false;
    if (TrialURL != other.TrialURL) return false;
    if (ErrorMessage != other.ErrorMessage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (isValid_ != null) hash ^= IsValid.GetHashCode();
    if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
    if (Userid.Length != 0) hash ^= Userid.GetHashCode();
    if (TrialURL.Length != 0) hash ^= TrialURL.GetHashCode();
    if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (isValid_ != null) {
      _single_isValid_codec.WriteTagAndValue(output, IsValid);
    }
    if (CountryCode.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CountryCode);
    }
    if (Userid.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Userid);
    }
    if (TrialURL.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(TrialURL);
    }
    if (ErrorMessage.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ErrorMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (isValid_ != null) {
      size += _single_isValid_codec.CalculateSizeWithTag(IsValid);
    }
    if (CountryCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
    }
    if (Userid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
    }
    if (TrialURL.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TrialURL);
    }
    if (ErrorMessage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InsuranceTrialLinkGetResponse other) {
    if (other == null) {
      return;
    }
    if (other.isValid_ != null) {
      if (isValid_ == null || other.IsValid != false) {
        IsValid = other.IsValid;
      }
    }
    if (other.CountryCode.Length != 0) {
      CountryCode = other.CountryCode;
    }
    if (other.Userid.Length != 0) {
      Userid = other.Userid;
    }
    if (other.TrialURL.Length != 0) {
      TrialURL = other.TrialURL;
    }
    if (other.ErrorMessage.Length != 0) {
      ErrorMessage = other.ErrorMessage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          bool? value = _single_isValid_codec.Read(input);
          if (isValid_ == null || value != false) {
            IsValid = value;
          }
          break;
        }
        case 18: {
          CountryCode = input.ReadString();
          break;
        }
        case 26: {
          Userid = input.ReadString();
          break;
        }
        case 34: {
          TrialURL = input.ReadString();
          break;
        }
        case 42: {
          ErrorMessage = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
